version: "3.8"

services: 
  
  #my services
  gateway-service:
    build:
      context: "../src/Ozon.Route256.Practice.GatewayService"
      dockerfile: "Dockerfile"
    container_name: "gateway-service"
    environment:
      - "ROUTE256_ORDER_SERVICE_ADDRESSES=orders-service-1:81;orders-service-2:81"
      - "ROUTE256_CUSTOMER_SERVICE_ADDRESS=customer-service:81"
      - "ROUTE256_HTTP_PORT=80"
    ports:
      - "8080:80"
      - "8043:443"
  
  orders-service-1:
    build:
      context: "../src/Ozon.Route256.Practice.OrdersService"
      dockerfile: "Dockerfile"
    container_name: "orders-service-1"
    environment: 
      "ROUTE256_GRPC_PORT": "81"
    ports:
      - "8180:81"
  
  orders-service-2:
    build:
      context: "../src/Ozon.Route256.Practice.OrdersService"
      dockerfile: "Dockerfile"
    container_name: "orders-service-2"
    environment:
      "ROUTE256_GRPC_PORT": "81"
    ports:
      - "8280:81"
  
  #ozon services
  customer-service:
    image: "gitlab-registry.ozon.dev/cs/classroom-8/students/practice/customer-service"
    container_name: "customer-service"
    environment:
      - "ROUTE256_SD_ADDRESS=http://service-discovery:80"
      - "ROUTE256_GRPC_PORT=81"
      - "ROUTE256_HTTP_PORT=80"
    ports:
      - "8380:80"
      - "8381:81"
      - "8343:443"
        
  logistics-simulator:
    image: "gitlab-registry.ozon.dev/cs/classroom-8/students/practice/logistics-simulator"
    container_name: "logistics-simulator"
    ports:
      - "8480:80"
      - "8443:443"
        
  orders-generator-website:
    image: "gitlab-registry.ozon.dev/cs/classroom-8/students/practice/orders-generator"
    container_name: "orders-generator-website"
    environment:
      ROUTE256_ORDER_SOURCE: "WebSite"
    ports:
      - "8580:80"
      - "8543:443"
  
  orders-generator-mobile:
    image: "gitlab-registry.ozon.dev/cs/classroom-8/students/practice/orders-generator"
    container_name: "orders-generator-mobile"
    environment:
      ROUTE256_ORDER_SOURCE: "Mobile"
    ports:
      - "8680:80"
      - "8643:443"
  
  orders-generator-api:
    image: "gitlab-registry.ozon.dev/cs/classroom-8/students/practice/orders-generator"
    container_name: "orders-generator-api"
    environment:
      ROUTE256_ORDER_SOURCE: "Api"
    ports:
      - "8780:80"
      - "8743:443"
  
  service-discovery:
    image: "gitlab-registry.ozon.dev/cs/classroom-8/students/practice/service-discovery"
    container_name: "service-discovery"
    environment:
      - "ROUTE256_DB_STATE=cluster:0-9:db1:1543;cluster:10-19:db2:1543;cluster1:0:db3:1543"
      - "ROUTE256_UPDATE_TIMEOUT=10"
    ports:
      - "8880:80"
      - "8843:443"
  
  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    container_name: "zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  broker-1:
    image: "confluentinc/cp-kafka:latest"
    container_name: "broker-1"
    depends_on:
      - zookeeper
    ports:
      - 29091:29091
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  broker-2:
    image: "confluentinc/cp-kafka:latest"
    container_name: "broker-2"
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  customer-service-db:
    image: "postgres:latest"
    restart: always
    environment:
      POSTGRES_DB: customer-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    container_name: "customer-service-db"
    volumes:
    - ../pgdata/Customers:/var/lib/postgresql/data
    ports:
      - "5532:5432"
      
  
  orders-service-db:
    image: "postgres:latest"
    restart: always
    environment:
      POSTGRES_DB: orders-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    container_name: "orders-service-db"
    volumes:
      - ../pgdata/Orders:/var/lib/postgresql/data
    ports:
      - "5533:5432"